<?php

namespace Itsur\AeiBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * AspiranteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AspiranteRepository extends EntityRepository
{

    public function findByPeriodoAndFicha($periodo, $ficha)
    {
        $query = $this->getEntityManager()
        ->createQuery('
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE a.ficha = :ficha AND p.id = :id'
        )->setParameter('ficha', $ficha)
        ->setParameter('id', $periodo);
        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
     public function findByPeriodoAndFichaWithHoja($periodo, $ficha)
     {   
        $query = $this->getEntityManager()
        ->createQuery('
            SELECT a, p, h FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            JOIN a.hoja h
            WHERE a.ficha = :ficha AND p.id = :id'
        )->setParameter('ficha', $ficha)
        ->setParameter('id', $periodo);
        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    public function findByPeriodoAndNombre($periodo, $nombre)
    {


        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE a.nombre LIKE :nombre AND p.id = :periodo"
        )->setParameter('periodo', $periodo)
        ->setParameter('nombre', "%".$nombre."%");
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

     public function findAllByPeriodo($periodo)
     {

        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
            ORDER BY a.ficha ASC"
        )->setParameter('periodo', $periodo);
       try {
        return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
           return null;
        }

    }

    public function findAllOrderedNameByPeriodo($periodo)
     {

        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
            ORDER BY a.nombre ASC"
        )->setParameter('periodo', $periodo);
       try {
        return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
           return null;
        }

    }

    public function findAllOrderedNameDescByPeriodo($periodo)
     {

        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
            ORDER BY a.nombre DESC"
        )->setParameter('periodo', $periodo);
       try {
        return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
           return null;
        }

    }

    public function findAllByPeriodoAndCarrera($periodo, $carrera)
    {
        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
               AND a.carrera = :carrera
            ORDER BY a.ficha ASC"
        )->setParameter('periodo', $periodo)
         ->setParameter('carrera', $carrera);
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }


    public function findAllOrderedNameByPeriodoAndCarrera($periodo, $carrera)
    {
        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
               AND a.carrera = :carrera
            ORDER BY a.nombre ASC"
        )->setParameter('periodo', $periodo)
         ->setParameter('carrera', $carrera);
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    

    public function findAllOrderedNameDescByPeriodoAndCarrera($periodo, $carrera)
    {
        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
               AND a.carrera = :carrera
            ORDER BY a.nombre DESC"
        )->setParameter('periodo', $periodo)
         ->setParameter('carrera', $carrera);
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }


    public function findAllByPeriodoWithHoja($periodo)
    {

        $query = $this->getEntityManager()
        ->createQuery("
            SELECT a, p, h FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            JOIN a.hoja h
            WHERE  p.id = :periodo
            ORDER BY a.ficha ASC"
        )->setParameter('periodo', $periodo);
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function count($periodo)
    {

        $query = $this->getEntityManager()
        ->createQuery("
            SELECT  COUNT(a.ficha) FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo"
        )->setParameter('periodo', $periodo);
        try {
            return $query->getResult(Query::HYDRATE_SCALAR);
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }


    public function countByCarrera($periodo, $carrera)
    {

        $query = $this->getEntityManager()
        ->createQuery("
            SELECT  COUNT(a.ficha) FROM ItsurAeiBundle:Aspirante a
            JOIN a.periodo p
            WHERE  p.id = :periodo
                AND a.carrera = :carrera"
        )
        ->setParameter('carrera', $carrera)
        ->setParameter('periodo', $periodo);
        try {
            return $query->getResult(Query::HYDRATE_SCALAR);
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

}